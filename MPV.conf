# It is always best to review the settings page for MPV. https://mpv.io/manual/stable/
# Some settings are the same as default but may change through updates and so are set anyways to ensure they persist. This also means some settings may be removed or break through updates. 
# Hashtag settings will not apply unless you remove the hashtag.
# Check for issues with ~ or Shift+I then 1 or 2.
#d3d11-adapter= Insert the name of your GPU here. If unsure find out by using powershell or cmd on mpv.com with the command "mpv.com --d3d11-adapter=help" (No quotes). If it doesn't run move the console cursor to mpv.com and press tab then try again. 
#Whatever is next to description: is an available GPU. If there are multiple select the one you want to use.
#vulkan-device= Insert the name of your GPU here. If unsure use the name from d3d11-adapter.
#ad-lavc-threads= # Insert the thread count of your CPU here.
allow-delayed-peak-detect=no # "Higher quality" hdr.
audio-format=doublep # "Higher quality" audio
ao=wasapi # "Higher quality" audio on Windows.
cache-on-disk=no # Hopefully uses memory cache.
cache-secs=33 # Subjective but can be set absurdly high to cache as much as possible.
correct-downscaling=yes # Supposed to increase radius of filters when downscaling and increase "quality".
d3d11va-zero-copy=yes # Apparently optimizes hardware decoding but may be unstable.
demuxer-max-back-bytes=3GiB # Subjective but can be set to memory capacity to cache as much as possible.
demuxer-max-bytes=3GiB #Subjective but can be set to memory capacity to cache as much as possible.
dither-size-fruit=8 # Highest setting for dither fruit for "quality".
fbo-format=rgba32f # Highest floating point setting for buffer format for "quality". Apparently "high quality" buffers can improve scaling and resampling "quality".
fullscreen=yes
gpu-api=vulkan # Vulkan is supposed to be newer and more performant than DirectX 11 (D3D11). It's implementation in MPV is sort of experimental atleast on Windows.
gpu-context=winvk # Used for Vulkan on Windows.
hdr-compute-peak=yes # Supposed to improve HDR tone mapping "quality".
hdr-contrast-recovery=0.30 # Used in "gou-hq" / "high-quality" profile of MPV.
hdr-contrast-smoothness=1.0 # Might increase HDR perceived sharpness.
hdr-peak-decay-rate=0.0 # Apparently more accurate HDR peak detection but may have flickering.
hdr-peak-percentile=99.995 # Used in "gpu-hq" / "high-quality" profile of MPV.
hwdec=no # Software decoding is recommended for consistent "quality".
interpolation=yes # Attempts to mitigate judder of lower fps content on a higher refresh rate display. Uses tscale filter to do this.
linear-downscaling=yes # Increases perceived sharpness of downscaling and apparently more accurate.
linear-upscaling=no # Increases perceived sharpness of upscaling but also has more haloing when enabled.
load-scripts=no # Disables loading all scripts on startup.
loop-file=inf # Play video repeatedly.
priority=high # Might avoid stutters and improve playback when multitasking. However if using other tasks that should be prioritized it should be changed.
screenshot-format=webp # More compatible screenshot format but others such as JPEG-XL might have better compression.
screenshot-jxl-distance=0.0 # Lossless JPEG-XL.
screenshot-jxl-effort=9 # Highest compression JPEG-XL.
screenshot-webp-compression=6 # Highest compression WEBP.
screenshot-webp-lossless=yes # Lossless WEBP.
sigmoid-upscaling=yes # Seems to reduce haloing and increase perceived sharpness. May amplify color fringing or imperfections.
swapchain-depth=1 # Displays frames as soon as possible. Low latency playback.
target-colorspace-hint=yes # Detects capabilities of displays. May not always be accurate.
tone-mapping=spline # Subjective. What method to use to map HDR content to your display or SDR content when using inverse tone mapping.
tscale-blur=0.5 # Should really only be this low with sphinx. Causes strange issues with other filters when set this low. Less motion blur.
tscale-clamp=0.0 # Seemingly increases sharpness of content in motion.
tscale=sphinx # Apparently a "high quality" filter for interpolation and tscale.
#vd-lavc-threads= # Insert the thread count of your CPU here.
video-sync=display-resample # Required for interpolation.
vo=gpu-next # Newer and presumably more advanced than "GPU". Required for many settings here.
vulkan-async-compute=yes
vulkan-async-transfer=yes
vulkan-swap-mode=fifo # Supposed to enable vsync on Vulkan.
ytdl-format=bestvideo+bestaudio[format_id!$=-drc]/best # Supposed to download the highest quality videos with ytdlp.
#ytdl-raw-options-append=config= PATH TO CONFIG HERE Pass ytdlp config.
#ytdl-raw-options=config= PATH TO CONFIG HERE Pass ytdlp config.
ytdl=yes
sigmoid-slope=11.5 # Reduces haloing and increases perceived sharpness when using sigmoid-upscaling. May amplify color fringing or imperfections. 
sigmoid-center=0.5 # Supposed to 0.5 but defaults to 0.75.
scale=catmull_rom # Really just a fallback or if polar / ewa filters are too demanding.
cscale=bilinear # Bilinear is "smooth" but don't have to worry about artifacts in chroma.
dscale=catmull_rom # Really just a fallback or if polar / ewa filters are too demanding.
#glsl-shaders="~~/shaders/adaptive-sharpen.glsl" # Adaptive sharpen is presumably "higher quality" but can be demanding especially for iGPUs. However, this shader has to be installed.
#glsl-shaders="~~/shaders/unsharp_masking.glsl" # Adaptive sharpen may be too demanding on an iGPU so this shader is close and applies after scaling. However, this shader has to be installed.

# Sinc is supposedly the "ideal" 1 dimensional or seperable scaling / resampling filter. Jinc is apparently the 2 dimensional or isometric version of sinc and supposedly the "ideal" 2 dimensional scaling / resampling filter. 
# These both have haloing and ringing due to truncation of the filters because of the impracticality of using an infinite radius which these filters need to be "ideal". 
# Radius / lobes determines how many pixels to average with the filter and affects the perceived sharpness, aliasing, smoothing, blockiness, of these filters. 
# Lower settings seem to have less haloing, more perceived sharpness, but amplify imperfections and blockiness instead of smoothing. 
# These filters are the most demanding and Jinc can be very demanding with higher radius / lobes.
# Using libplacebo to use custom filters. Jinc must be used through here if using gpu-next since gpu-next made scale=Jinc use the seperable window function version instead of ewa / polar as it was in "GPU" which mostly defeats purpose of having Jinc as a filter. 
# The libplacebo version can be unwindowed with "ewa_jinc" which is the raw function but can have more haloing.
# Anti-ringing can reduce ringing or haloing but can introduce "quality" issues.
# Jinc needs custom calculated radius / lobe settings instead of integers like sinc.
# Polar / ewa catmull rom is also recommended as a "high quality" filter.
#libplacebo-opts=upscaler=custom,downscaler=custom,upscaler_preset=catmull_rom,downscaler_preset=catmull_rom,upscaler_polar=yes,downscaler_polar=yes,antiringing_strength=0.0,sigmoid=yes,sigmoid_slope=11.5,sigmoid_center=0.5 # Polar / ewa catmull rom.
libplacebo-opts=upscaler=custom,downscaler=custom,upscaler_preset=ewa_jinc,downscaler_preset=ewa_jinc,upscaler_radius=2.2331305943815286,downscaler_radius=2.2331305943815286,antiringing_strength=0.0,sigmoid=yes,sigmoid_slope=11.5,sigmoid_center=0.5 # Polar / EWA / "Real" Jinc. 
#In this configuration it's 2 lobe "Jinc" which is very sharp but might have aliasing or blockiness. It also has sigmoidized colorspace enabled. If it's too sharp try increasing the radius by using the calculated lobes or decreasing sigmoid_slope.

#vf=d3d11vpp:scaling-mode=nvidia:scale=2 # RTX VSR or Video Enhancement is supposed to process video if you have an Nvidia RTX GPU. It can "deartifact" video but may be "smooth", add "grain", and remove details. It can also be demanding and requires d3d11 instead of Vulkan.
# Scale should be manually specified from the ratio of the video resolution relative to your display resolution. 
# For example 720p source to a 1440p display would be scale=2.
# It is also possible to use RTX Video HDR but the official implementation sometimes doesn't work so use the Nvidia app or profile inspector to enable RTX HDR on mpv.exe. It applies inverse tone mapping like the setting of the same name. The RTX Video version requires d3d11 but the previously mentioned version works with Vulkan.
  
# If using an iGPU on a second monitor or even just a second monitor you can use a profile structured like this.
#[iGPU]
#profile-cond=display_height == INSERTDISPLAYVERTICALRESOLUTION and p["current-tracks/video/albumart"] == false # Replace occurences of "INSERTVERTICALDISPLAYRESOLUTION" with your display's vertical resolution. For example "4K" and 3840x2160 would be 2160.
#audio-exclusive=no # Exclusive audio apparently bypasses any processing. However, it will mute out any other audio sources while a video is playing on MPV.
#d3d11-adapter=
#dither-depth= # Bit depth of your display here.
#gpu-api=d3d11
#gpu-context=d3d11
#hwdec=d3d11va # If you want the iGPU to decode instead of the CPU.
#inverse-tone-mapping= # Expands SDR content to the HDR capabilities of your display if enabled. Also increases peak brightness of HDR content.
#priority=belownormal # Lowers priority for better performance when multitasking but may cause stuttering or worse playback.
#swapchain-depth=8 # How many frames to queue which may reduce dropped frames occurence but might increase delay between visuals and audio.
#vulkan-device=
#hwdec-extra-frames=16 # Mitigate an infrequent bug with iGPU decoding.

[dGPU]
#profile-cond=display_height == INSERTDISPLAYVERTICALRESOLUTION and p["current-tracks/video/albumart"] == false
#dither-depth= # Bit depth of your display here.
inverse-tone-mapping=yes # Expands SDR content to the HDR capabilities of your display if enabled. Also increases peak brightness of HDR content.
#target-contrast=  # Use inf (infinite) for OLED displays otherwise use the contrast appropriate for your display or use the default 1000 if unsure.

# It is possible to structure a profile like this to use another GPU when using a secondary display with an iGPU and use "higher quality" effects if the iGPU is unable to handle it.
[intelNvidiaNoScale]
#d3d11-adapter=
#vulkan-device=
libplacebo-opts=upscaler=custom,downscaler=custom,upscaler_preset=ewa_jinc,downscaler_preset=ewa_jinc,upscaler_radius=2.2331305943815286,downscaler_radius=2.2331305943815286,antiringing_strength=0.0,sigmoid=yes,sigmoid_slope=11.5,sigmoid_center=0.5
glsl-shaders="~~/shaders/adaptive-sharpen.glsl"

# Placeholders for EQ settings if using exclusive audio since those programs will not apply with it enabled.
[audioOnly]
profile-cond=not vid
audio-exclusive=yes 
af-add=lavfi=[volume=0dB]
#af-add=lavfi=[placeholder=f=0:width_type=q:w=0:g=0]

[exclusiveAudio]
#profile-cond=display_height == INSERTDISPLAYVERTICALRESOLUTIONHERE and p["current-tracks/video/albumart"] == false
audio-exclusive=yes
#af-add=lavfi=[volume=0dB]
#af-add=lavfi=[placeholder=f=0:width_type=q:w=0:g=0]
